---
- type: Query
  field: getGameById
  dataSource: games
  requestMapping: |
    {
      "version": "2017-02-28",
      "operation": "GetItem",
      "key": {
          "gameId": $util.dynamodb.toDynamoDBJson($ctx.args.gameId)
      }
    }
  responseMapping: $util.toJson($ctx.result)
- type: Query
  field: listGames
  dataSource: games
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "Scan"
    }
  responseMapping: $util.toJson($ctx.result.items)
- type: Query
  field: listGamesByEmcee
  dataSource: games
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "Query",
      "index" : "EmceeByGameId",
      "query" : {
        "expression": "emcee = :emcee",
        "expressionValues" : {
          ":emcee" : {
            "S" : "${ctx.args.emcee}"
          }
        }
      }
    }
  responseMapping: $util.toJson($ctx.result.items)
- type: Game
  field: categories
  dataSource: categories
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "Query",
      "query" : {
        "expression": "gameId = :gameId",
        "expressionValues" : {
          ":gameId" : {
            "N" : "${ctx.source.gameId}"
          }
        }
      }
    }
  responseMapping: $util.toJson($ctx.result.items)
- type: Game
  field: questions
  dataSource: questions
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "Query",
      "index": "GameIdQuesId",
      "query" : {
        "expression": "gameId = :gameId",
        "expressionValues" : {
          ":gameId" : {
            "N" : "${ctx.source.gameId}"
          }
        }
      }
    }
  responseMapping: $util.toJson($ctx.result.items)
- type: Mutation
  field: setQuestionState
  dataSource: questions
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "UpdateItem",
      "key" : {
        "quesId": $util.dynamodb.toDynamoDBJson($ctx.args.quesId)
      },
      "update" : {
        "expression" : "SET #state :state",
        "expressionNames" : {
          "#state" : "state"
        },
        "expressionValues" : {
          ":state" : { "S" : $util.dynamodb.toDynamoDBJson($ctx.args.state) }
        }
      }
    }
  responseMapping: $util.toJson($ctx.result)
