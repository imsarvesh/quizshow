---
- type: Query
  field: getGameById
  dataSource: games
  requestMapping: |
    {
      "version": "2017-02-28",
      "operation": "GetItem",
      "key": {
          "gameId": $util.dynamodb.toDynamoDBJson($ctx.args.gameId)
      }
    }
  responseMapping: $util.toJson($ctx.result)
- type: Query
  field: listGamesByEmcee
  dataSource: games
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "Query",
      "index" : "EmceeByGameId",
      "query" : {
        "expression": "emcee = :emcee",
        "expressionValues" : {
          ":emcee" : {
            "S" : "${ctx.args.emcee}"
          }
        }
      }
    }
  responseMapping: $util.toJson($ctx.result.items)
- type: Game
  field: categories
  dataSource: categories
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "Query",
      "query" : {
        "expression": "gameId = :gameId",
        "expressionValues" : {
          ":gameId" : {
            "N" : "${ctx.source.gameId}"
          }
        }
      }
    }
  responseMapping: $util.toJson($ctx.result.items)
- type: Game
  field: questions
  dataSource: questions
  requestMapping: |
    {
      "version" : "2017-02-28",
      "operation" : "Query",
      "query" : {
        "expression": "gameId = :gameId",
        "expressionValues" : {
          ":gameId" : {
            "N" : "${ctx.source.gameId}"
          }
        }
      }
    }
  responseMapping: $util.toJson($ctx.result.items)
# -
#   type: Mutation
#   field: createQuiz
#   dataSource: quiz
#   requestMapping: |
#     {
#       "version" : "2017-02-28",
#       "operation" : "PutItem",
#       "key" : {
#         ## If object "id" should come from GraphQL arguments, change to $util.dynamodb.toDynamoDBJson($ctx.args.id)
#         "id": $util.dynamodb.toDynamoDBJson($util.autoId()),
#       },
#       "attributeValues" : $util.dynamodb.toMapValuesJson($ctx.args)
#     }
#   responseMapping: $util.toJson($ctx.result)
