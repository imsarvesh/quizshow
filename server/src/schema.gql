type Question {
    quesId: ID!
    gameId: ID!
    catgId: ID!
    prize: Int!
    question: String!
    answer: String!
}

type Category {
    gameId: Int!
    catgId: ID!
    catgName: String!
    questions: [Question!]
}

type Game {
    gameId: ID!
    emcee: String!
    title: String!
    categories: [Category!]
}

type Query {
    listGamesByEmcee(emcee: String!): [Game!]
    getGameById(gameId: Int!): Game
    # listCatgsByGameId(gameId: Int!): [Category!]
    # getQuestion(quesId: Int!)
}

input NewQuestion {
    prize: Int!
    prompt: String!
    answer: String!
}

input NewCategory {
    name: String!
    questions: [NewQuestion!]!
}

type Mutation {
    createQuiz(title: String!, catgs: [NewCategory!]!): Game
}

schema {
    query: Query
    mutation: Mutation
}
