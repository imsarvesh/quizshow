type Contestant {
    gameId: Int!
    login: String!
    name: String!
    score: Int!
}

type Game {
    gameId: Int!
    emcee: String!
    title: String!
    categories: [Category!]
    contestants: [Contestant!]
}

type Category {
    gameId: Int!
    catgId: Int!
    categoryName: String!
    questions: [Question!]
}

type Question {
    catgId: Int!
    quesId: Int!
    points: Int!
    question: String!
    answer: String!
    state: StateEnum!
    nominees: [String!]
}

enum StateEnum {
    ready
    display
    open
    closed
}

type Query {
    listGames: [Game!]
    listGamesByEmcee(emcee: String!): [Game!]
    getGameById(gameId: Int!): Game
    getQuestionByCatgIdQuesId(catgId: Int!, quesId: Int!): Question
    getQuestionByQuesId(quesId: Int!): Question
}

type Mutation {
    setQuestionState(catgId: Int!, quesId: Int!, state: StateEnum!): Question
}

type Subscription {
    questionStateChange: Question
	@aws_subscribe(mutations: [ "setQuestionState" ])
}

schema {
    query: Query
    mutation: Mutation
	subscription: Subscription
}
