#!/usr/bin/env node
const loadGame = require('./loadgame').loadGame;
const addUsers = require('./addusers').addUsers;
const cleanTables = require('./cleantables').cleanTables;
const addContestants = require('./addcontestants').addContestants;
const addNominees = require('./addnominees').addNominees;

require('yargs') // eslint-disable-line
    .command('cleantables',
             'Delete all Items in QuizContestants, QuizGames, QuizCategories, and QuizQuestions',
             () => {},
             cleanTables)
    .command('loadgame <files..>',
             'Load game from CSV into Dynamo tables',
             () => {},
             loadGame)
    .command('addusers',
             'Add new users to a Cognito user pool, setting their passwords too',
             (yargs) => yargs.option('csvfile', {
                                 alias: 'f',
                                 describe: 'CSV file with users and passwords',
                                 demandOption: true
                             })
                             .option('userpool', {
                                 alias: 'u',
                                 describe: 'Cognito User Pool ID to add users to',
                                 demandOption: true
                             })
                             .option('emailtmpl', {
                                 alias: 'e',
                                 describe: 'Email template to generate email addresses',
                                 default: `${process.env.USER}+LOGIN@amazon.com`
                             }),
             argv => addUsers(argv.csvfile, argv.userpool, argv.emailtmpl))
    .command('contestants',
             'Add n new contestants via GraphQL joinGame() (end up in QuizContestants)',
             (yargs) => yargs.option('datafile', {
                                 alias: 'f',
                                 describe: 'CSV with potential contestant logins, names, ...',
                                 default: 'samplegames/contestants.csv'
                             })
                             .option('quantity', {
                                alias: 'n',
                                describe: 'How many new contestants to join the game',
                                default: 10
                             })
                             .option('gameid', {
                                 alias: 'g',
                                 describe: 'The gameId in QuizGames contestants should join',
                                 demandOption: true,
                                 type: 'number'
                             }),
             argv => addContestants(argv.datafile, argv.quantity, argv.gameid))
    .command('nominees',
             'Nominate n contestants for a question',
             (yargs) => yargs.option('quesid', {
                                 alias: 'q',
                                 describe: 'quesId in Dynamo for the question to nominate for',
                                 demandOption: true,
                                 type: 'number'
                             })
                             .option('quantity', {
                                alias: 'n',
                                describe: 'How many new contestants to join the game',
                                default: 6,
                                type: 'number'
                             }),
             argv => addNominees(argv.quesid, argv.quantity))
    .help()
    .argv
